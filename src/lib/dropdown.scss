/**
 DO NOT USE THESE
*/

/******************************************

    WARNING - DO NOT USE THESE

*******************************************/

/* Dropdown arrow/caret */

.caret {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: 2px;
    vertical-align: middle;
    border-top: 4px dashed;
    border-top: 4px solid \9; /* IE8 */
    border-right: 4px solid transparent;
    border-left: 4px solid transparent;
}

/* The dropdown wrapper (div) */

.dropup,
.dropdown {
    position: relative;
}

/* Prevent the focus on the dropdown toggle when closing dropdowns */

.dropdown-toggle:focus {
    outline: 0;
}

/* The dropdown menu (ul) */

.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    display: none; /* none by default, but block on "open" of the menu */
    float: left;
    min-width: calc(var(--mq-space-base) * 20);
    list-style: none;
    text-align: left; /* Ensures proper alignment if parent has it changed (e.g., modal footer) */
    border-radius: 4px;
    box-shadow: var(--mq-boxshadow-l2-down);
    background-color: var(--mq-color-white);
    background-clip: padding-box;

    /* Aligns the dropdown menu to right */
    /* */
    /* Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]` */

    &.pull-right,
    &.mq-pull-right {
        right: 0;
        left: auto;
    }

    /* Dividers (basically an hr) within the dropdown */

    .divider {
        height: 1px;
        overflow: hidden;
        background-color: var(--mq-color-grey20);
        padding: 0px;
    }

    /* Links within the dropdown menu */

    > li {
        display: block;
        clear: both;
        font-weight: normal;
        white-space: nowrap; /* prevent links from randomly breaking onto new lines */
        height: calc(var(--mq-space-base) * 5);
        line-height: calc(var(--mq-space-base) * 5);
        font-size: 14px;

        &:not(:last-child) {
            border-bottom: 1px solid var(--mq-color-grey10);
        }

        & > a {
            font-size: 14px;
            padding-left: calc(var(--mq-space-small) + 2px); /*plus 2 for border on hover and selected state */
            padding-right: var(--mq-space-small);
            width: 100%;
            display: block;
            color: var(--mq-color-grey70);
        }
    }
}

/* Hover/Focus state */

.dropdown-menu > li {

    &:hover:not(.disabled),
    &:focus:not(.disabled) {
        cursor: pointer;
        color: var(--mq-color-grey90);
        background-color: var(--mq-dropdown-option-hover-bg-color);

        > a {
            padding-left: var(--mq-space-small);
            border-left: 2px solid var(--mq-color-grey100);
        }
    }
}

/* Active state */

.dropdown-menu > .active > a,
.dropdown-menu > [selected] > a {

    &,
    &:hover,
    &:focus {
        padding-left: var(--mq-space-small);
        border-left: 2px solid var(--mq-color-blue100);
        color: var(--mq-color-grey90);
        text-decoration: none;
        outline: 0;
    }
}

/* Disabled state */
/* */
/* Gray out text and ensure the hover/focus state remains gray */

.dropdown-menu > .disabled,
.dropdown-menu > .disabled > a {

    &,
    &:hover,
    &:focus {
        color: var(--mq-color-grey40);
    }

    /* Nuke hover/focus effects */

    &:hover,
    &:focus {
        text-decoration: none;
        background-color: transparent;
        background-image: none; /* Remove CSS gradient */
        filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
        cursor: not-allowed;
    }
}

/* Open state for the dropdown */

.open {
    /* Show the menu */

    > .dropdown-menu {
        display: block;
    }

    /* Remove the outline when :focus is triggered */

    > a {
        outline: 0;
    }
}

/* Menu positioning */
/* */
/* Add extra class to `.dropdown-menu` to flip the alignment of the dropdown */
/* menu with the parent. */

.dropdown-menu-right {
    left: auto; /* Reset the default from `.dropdown-menu` */
    right: 0;
}
/* With v3, we enabled auto-flipping if you have a dropdown within a right */
/* aligned nav component. To enable the undoing of that, we provide an override */
/* to restore the default dropdown menu alignment. */
/* */
/* This is only for left-aligning a dropdown menu within a `.navbar-right` or */
/* `.pull-right` nav component. */

.dropdown-menu-left {
    left: 0;
    right: auto;
}

/* Dropdown section headers */

.dropdown-header {
    display: block;
    padding: 3px 20px;
    font-size: 14px;
    color: var(--mq-color-grey70);

    &:hover {
        cursor: default;
    }
}

/* Backdrop to catch body clicks on mobile, etc. */

.dropdown-backdrop {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    z-index: 990;
}

/* Right aligned dropdowns */

.pull-right > .dropdown-menu {
    right: 0;
    left: auto;
}

/* Allow for dropdowns to go bottom up (aka, dropup-menu) */
/* */
/* Just add .dropup after the standard .dropdown class and you're set, bro. */
/* TODO: abstract this so that the navbar fixed styles are not placed here? */

.dropup,
.navbar-fixed-bottom .dropdown {
    /* Reverse the caret */

    .caret {
        border-top: 0;
        border-bottom: 4px dashed;
        border-bottom: 4px solid \9; /* IE8 */
        content: '';
    }
    /* Different positioning for bottom up menu */

    .dropdown-menu {
        top: auto;
        bottom: 100%;
        margin-bottom: 2px;
    }
}

/* Component alignment */
/* */
/* Reiterate per navbar.less and the modified component alignment there. */

@media (min-width: 1024) {

    .navbar-right {

        .dropdown-menu {
            right: 0;
            left: auto;
        }
        /* Necessary for overrides of the default right aligned menu. */
        /* Will remove come v4 in all likelihood. */

        .dropdown-menu-left {
            left: 0;
            right: auto;
        }
    }
}

.dropup,
.dropdown {

    .dropdown-toggle {
        cursor: pointer;
    }

    .dropdown-toggle[disabled] {
        cursor: not-allowed;
    }

    .dropdown-menu {
        min-width: 100%;

        li:not(:last-child) {

            &.dropdown-header {
                padding: calc(var(--mq-space-small) + 2px);

                &.dropdown-header--label {
                    color: var(--mq-color-grey40);
                }
            }

            &.dropdown-link-item {
                padding: var(--mq-space-small);
                font-weight: normal;
                cursor: pointer;
                white-space: nowrap;
                color: var(--mq-color-grey70);

                &:hover {
                    color: var(--mq-color-grey90);
                    border-left: 2px solid var(--mq-color-grey100);
                    background-color: var(--mq-dropdown-option-hover-bg-color);
                }
            }

            > label {
                margin-bottom: 0;
            }

            &.disabled {
                color: var(--mq-color-grey40);
            }

            &.active {

                & > a,
                & > a:hover {
                    padding-left: var(--mq-space-small);
                    border-left: 2px solid var(--mq-color-blue100);
                    color: var(--mq-color-grey90);
                }
            }
            border-bottom: 1px solid var(--mq-color-grey10);
        }
    }

    i.icon-triangledown {
        font-size: 10px;
        vertical-align: middle;
        line-height: 20px;
    }
}
