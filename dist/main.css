/*
! tailwindcss v3.1.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::-webkit-backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

/* @import "./base.css"; */

/* @import "tailwindcss/components"; */

/* @import "./custom-components.css"; */

/* @import "tailwindcss/utilities"; */

/* @import "./custom-utilities.css"; */

/* http://meyerweb.com/eric/tools/css/reset/ 
    v2.0 | 20110126
    License: none (public domain)
    */

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* https://html.spec.whatwg.org/multipage/rendering.html#tables-2 */

thead,
tbody,
tfoot {
  vertical-align: middle;
}

td,
th,
tr {
  vertical-align: inherit;
}

* {
  box-sizing: border-box;
}

*:focus {
  outline: none;
}

a {
  text-decoration: none;
}

.mq-padding-narrow {
  padding: var(--mq-space-narrow);
}

.mq-padding-narrow-top {
  padding-top: var(--mq-space-narrow);
}

.mq-padding-narrow-right {
  padding-right: var(--mq-space-narrow);
}

.mq-padding-narrow-bottom {
  padding-bottom: var(--mq-space-narrow);
}

.mq-padding-narrow-left {
  padding-left: var(--mq-space-narrow);
}

.mq-padding-narrow-vertical {
  padding-top: var(--mq-space-narrow);
  padding-bottom: var(--mq-space-narrow);
}

.mq-padding-narrow-horizontal {
  padding-left: var(--mq-space-narrow);
  padding-right: var(--mq-space-narrow);
}

.mq-padding-base {
  padding: var(--mq-space-base);
}

.mq-padding-base-top {
  padding-top: var(--mq-space-base);
}

.mq-padding-base-right {
  padding-right: var(--mq-space-base);
}

.mq-padding-base-bottom {
  padding-bottom: var(--mq-space-base);
}

.mq-padding-base-left {
  padding-left: var(--mq-space-base);
}

.mq-padding-base-vertical {
  padding-top: var(--mq-space-base);
  padding-bottom: var(--mq-space-base);
}

.mq-padding-base-horizontal {
  padding-left: var(--mq-space-base);
  padding-right: var(--mq-space-base);
}

.mq-padding-xsmall {
  padding: var(--mq-space-xsmall);
}

.mq-padding-xsmall-top {
  padding-top: var(--mq-space-xsmall);
}

.mq-padding-xsmall-right {
  padding-right: var(--mq-space-xsmall);
}

.mq-padding-xsmall-bottom {
  padding-bottom: var(--mq-space-xsmall);
}

.mq-padding-xsmall-left {
  padding-left: var(--mq-space-xsmall);
}

.mq-padding-xsmall-vertical {
  padding-top: var(--mq-space-xsmall);
  padding-bottom: var(--mq-space-xsmall);
}

.mq-padding-xsmall-horizontal {
  padding-left: var(--mq-space-xsmall);
  padding-right: var(--mq-space-xsmall);
}

.mq-padding-small {
  padding: var(--mq-space-small);
}

.mq-padding-small-top {
  padding-top: var(--mq-space-small);
}

.mq-padding-small-right {
  padding-right: var(--mq-space-small);
}

.mq-padding-small-bottom {
  padding-bottom: var(--mq-space-small);
}

.mq-padding-small-left {
  padding-left: var(--mq-space-small);
}

.mq-padding-small-vertical {
  padding-top: var(--mq-space-small);
  padding-bottom: var(--mq-space-small);
}

.mq-padding-small-horizontal {
  padding-left: var(--mq-space-small);
  padding-right: var(--mq-space-small);
}

.mq-padding-medium {
  padding: var(--mq-space-medium);
}

.mq-padding-medium-top {
  padding-top: var(--mq-space-medium);
}

.mq-padding-medium-right {
  padding-right: var(--mq-space-medium);
}

.mq-padding-medium-bottom {
  padding-bottom: var(--mq-space-medium);
}

.mq-padding-medium-left {
  padding-left: var(--mq-space-medium);
}

.mq-padding-medium-vertical {
  padding-top: var(--mq-space-medium);
  padding-bottom: var(--mq-space-medium);
}

.mq-padding-medium-horizontal {
  padding-left: var(--mq-space-medium);
  padding-right: var(--mq-space-medium);
}

.mq-padding-large {
  padding: var(--mq-space-large);
}

.mq-padding-large-top {
  padding-top: var(--mq-space-large);
}

.mq-padding-large-right {
  padding-right: var(--mq-space-large);
}

.mq-padding-large-bottom {
  padding-bottom: var(--mq-space-large);
}

.mq-padding-large-left {
  padding-left: var(--mq-space-large);
}

.mq-padding-large-vertical {
  padding-top: var(--mq-space-large);
  padding-bottom: var(--mq-space-large);
}

.mq-padding-large-horizontal {
  padding-left: var(--mq-space-large);
  padding-right: var(--mq-space-large);
}

.mq-margin-narrow {
  margin: var(--mq-space-narrow);
}

.mq-margin-narrow-top {
  margin-top: var(--mq-space-narrow);
}

.mq-margin-narrow-right {
  margin-right: var(--mq-space-narrow);
}

.mq-margin-narrow-bottom {
  margin-bottom: var(--mq-space-narrow);
}

.mq-margin-narrow-left {
  margin-left: var(--mq-space-narrow);
}

.mq-margin-narrow-vertical {
  margin-top: var(--mq-space-narrow);
  margin-bottom: var(--mq-space-narrow);
}

.mq-margin-narrow-horizontal {
  margin-left: var(--mq-space-narrow);
  margin-right: var(--mq-space-narrow);
}

.mq-margin-base {
  margin: var(--mq-space-base);
}

.mq-margin-base-top {
  margin-top: var(--mq-space-base);
}

.mq-margin-base-right {
  margin-right: var(--mq-space-base);
}

.mq-margin-base-bottom {
  margin-bottom: var(--mq-space-base);
}

.mq-margin-base-left {
  margin-left: var(--mq-space-base);
}

.mq-margin-base-vertical {
  margin-top: var(--mq-space-base);
  margin-bottom: var(--mq-space-base);
}

.mq-margin-base-horizontal {
  margin-left: var(--mq-space-base);
  margin-right: var(--mq-space-base);
}

.mq-margin-xsmall {
  margin: var(--mq-space-xsmall);
}

.mq-margin-xsmall-top {
  margin-top: var(--mq-space-xsmall);
}

.mq-margin-xsmall-right {
  margin-right: var(--mq-space-xsmall);
}

.mq-margin-xsmall-bottom {
  margin-bottom: var(--mq-space-xsmall);
}

.mq-margin-xsmall-left {
  margin-left: var(--mq-space-xsmall);
}

.mq-margin-xsmall-vertical {
  margin-top: var(--mq-space-xsmall);
  margin-bottom: var(--mq-space-xsmall);
}

.mq-margin-xsmall-horizontal {
  margin-left: var(--mq-space-xsmall);
  margin-right: var(--mq-space-xsmall);
}

.mq-margin-small {
  margin: var(--mq-space-small);
}

.mq-margin-small-top {
  margin-top: var(--mq-space-small);
}

.mq-margin-small-right {
  margin-right: var(--mq-space-small);
}

.mq-margin-small-bottom {
  margin-bottom: var(--mq-space-small);
}

.mq-margin-small-left {
  margin-left: var(--mq-space-small);
}

.mq-margin-small-vertical {
  margin-top: var(--mq-space-small);
  margin-bottom: var(--mq-space-small);
}

.mq-margin-small-horizontal {
  margin-left: var(--mq-space-small);
  margin-right: var(--mq-space-small);
}

.mq-margin-medium {
  margin: var(--mq-space-medium);
}

.mq-margin-medium-top {
  margin-top: var(--mq-space-medium);
}

.mq-margin-medium-right {
  margin-right: var(--mq-space-medium);
}

.mq-margin-medium-bottom {
  margin-bottom: var(--mq-space-medium);
}

.mq-margin-medium-left {
  margin-left: var(--mq-space-medium);
}

.mq-margin-medium-vertical {
  margin-top: var(--mq-space-medium);
  margin-bottom: var(--mq-space-medium);
}

.mq-margin-medium-horizontal {
  margin-left: var(--mq-space-medium);
  margin-right: var(--mq-space-medium);
}

.mq-margin-large {
  margin: var(--mq-space-large);
}

.mq-margin-large-top {
  margin-top: var(--mq-space-large);
}

.mq-margin-large-right {
  margin-right: var(--mq-space-large);
}

.mq-margin-large-bottom {
  margin-bottom: var(--mq-space-large);
}

.mq-margin-large-left {
  margin-left: var(--mq-space-large);
}

.mq-margin-large-vertical {
  margin-top: var(--mq-space-large);
  margin-bottom: var(--mq-space-large);
}

.mq-margin-large-horizontal {
  margin-left: var(--mq-space-large);
  margin-right: var(--mq-space-large);
}

.mq-clearfix:before,
.mq-clearfix:after {
  content: ' ';
  display: table;
}

.mq-clearfix:after {
  clear: both;
}

.mq-center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.mq-pull-right {
  float: right !important;
}

.mq-pull-left {
  float: left !important;
}

.mq-hide {
  display: none !important;
}

.mq-show {
  display: block !important;
}

.mq-invisible {
  visibility: hidden;
}

.mq-text-left {
  text-align: left;
}

.mq-text-right {
  text-align: right;
}

.mq-text-center {
  text-align: center;
}

.mq-text-justify {
  text-align: justify;
}

.mq-text-nowrap {
  white-space: nowrap;
}

.mq-text-lowercase {
  text-transform: lowercase;
}

.mq-text-uppercase {
  text-transform: uppercase;
}

.mq-text-capitalize {
  text-transform: capitalize;
}

/*
    Ref: https://gist.github.com/ffoodd/000b59f431e3e64e4ce1a24d5bb36034
*/

.mq-sr-only {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important;
  &--focusable:focus,
    &--focusable:active {
    clip: auto !important;
    -webkit-clip-path: none !important;
    clip-path: none !important;
    height: auto !important;
    margin: auto !important;
    overflow: visible !important;
    width: auto !important;
    white-space: normal !important;
  }
}

@mixin mq-font-face($path) {
  @font-face {
    font-family: 'HelveticaNeue';

    font-weight: normal;

    font-style: normal;

    src: url('#{$path}/assets/mq-styles/fonts/helveticaneue/HelveticaNeueLTW01-55Roman.eot');

    src: url('#{$path}/assets/mq-styles/fonts/helveticaneue/HelveticaNeueLTW01-55Roman.eot?#iefix')
                format('embedded-opentype'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue/HelveticaNeueLTW01-55Roman.woff') format('woff'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue/HelveticaNeueLTW01-55Roman.ttf') format('truetype'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue/HelveticaNeueLTW01-55Roman.svg#5101995a-e73b-4cf9-84e8-f99eb43277b1')
                format('svg');

    font-display: fallback;
  }

  @font-face {
    font-family: 'HelveticaNeue-Light';

    font-weight: lighter;

    font-style: lighter;

    src: url('#{$path}/assets/mq-styles/fonts/helveticaneue-light/HelveticaNeueLTW01-45Light.eot');

    src: url('#{$path}/assets/mq-styles/fonts/helveticaneue-light/HelveticaNeueLTW01-45Light.eot?#iefix')
                format('embedded-opentype'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue-light/HelveticaNeueLTW01-45Light.woff') format('woff'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue-light/HelveticaNeueLTW01-45Light.ttf') format('truetype'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue-light/HelveticaNeueLTW01-45Light.svg#82a4e1c2-7ffd-4c58-86fa-4010a6723c8e')
                format('svg');

    font-display: fallback;
  }

  @font-face {
    font-family: 'HelveticaNeue-Medium';

    font-weight: bold;

    font-style: bold;

    src: url('#{$path}/assets/mq-styles/fonts/helveticaneue-medium/HelveticaNeueLTW01-65Medium.eot');

    src: url('#{$path}/assets/mq-styles/fonts/helveticaneue-medium/HelveticaNeueLTW01-65Medium.eot?#iefix')
                format('embedded-opentype'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue-medium/HelveticaNeueLTW01-65Medium.woff') format('woff'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue-medium/HelveticaNeueLTW01-65Medium.ttf') format('truetype'),
            url('#{$path}/assets/mq-styles/fonts/helveticaneue-medium/HelveticaNeueLTW01-65Medium.svg#e5567978-93ef-4de1-804d-1f0e3654a014')
                format('svg');

    font-display: fallback;
  }

  /*Including northwell temporarily until southcoast font is available*/

  @font-face {
    font-family: 'northwell';

    src: url('#{$path}/assets/mq-styles/fonts/northwell/NorthwellAlt.eot');

    src: url('#{$path}/assets/mq-styles/fonts/northwell/NorthwellAlt.eot?#iefix') format('embedded-opentype'),
            url('#{$path}/assets/mq-styles/fonts/northwell/NorthwellAlt.woff2') format('woff2'),
            url('#{$path}/assets/mq-styles/fonts/northwell/NorthwellAlt.woff') format('woff'),
            url('#{$path}/assets/mq-styles/fonts/northwell/NorthwellAlt.ttf') format('truetype'),
            url('#{$path}/assets/mq-styles/fonts/northwell/NorthwellAlt.svg#NorthwellAlt') format('svg');

    font-display: fallback;
  }
}

@mixin mq-body-strong() {
  font-family: HelveticaNeue-Medium, Helvetica, Arial;
}

@mixin mq-body-italic() {
  font-style: italic;
}

@mixin mq-body-grey70() {
  color: var(--mq-color-grey70);
}

@mixin mq-body-grey40() {
  color: var(--mq-color-grey40);
}

@mixin mq-body-red() {
  color: var(--mq-color-red100);
}

@mixin mq-body-green() {
  color: var(--mq-color-green100);
}

@mixin mq-body-white() {
  color: var(--mq-color-white);
}

@mixin mq-body-small() {
  font-size: 12px;

  line-height: 16px;
}

@mixin mq-body-micro() {
  font-size: 10px;

  line-height: 14px;
}

@mixin mq-feature-heading() {
  font-family: northwell;
}

h1,
h2,
h3,
h4 {
  font-family: HelveticaNeue-Light, Helvetica, Arial;
  color: var(--mq-color-grey100);
  &.mq-heading-white {
    color: var(--mq-color-white);
  }
}

h1,
h2 {
  margin: 0px 0px 8px 0px;
}

h3,
h4 {
  margin: 8px 0px 8px 0px;
}

h1 {
  font-size: 28px;
  line-height: 36px;
}

h2 {
  font-size: 24px;
  line-height: 32px;
}

h3 {
  font-size: 20px;
  line-height: 28px;
}

h4 {
  font-size: 16px;
  line-height: 24px;
}

strong {
  @extend .mq-body-strong;
}

em {
  @extend .mq-body-italic;
}

small {
  @extend .mq-body-small;
}

@media screen and (max-width: 1440px) {
  h1 {
    font-size: 24px;
    line-height: 32px;
  }

  h2 {
    font-size: 20px;
    line-height: 28px;
  }

  h3 {
    font-size: 16px;
    line-height: 24px;
  }

  h4 {
    font-family: HelveticaNeue-Medium, Helvetica, Arial;
    font-size: 14px;
    line-height: 20px;
  }
}

.mq-body {
  font-size: 14px;
  line-height: 1.428571429;
  color: var(--mq-color-grey90);
  font-family: HelveticaNeue, Helvetica, Arial;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  &-strong {
    @include mq-body-strong;
  }
  &-italic {
    @include mq-body-italic;
  }
  &-grey70 {
    @include mq-body-grey70;
  }
  &-grey40 {
    @include mq-body-grey40;
  }
  &-red {
    @include mq-body-red;
  }
  &-green {
    @include mq-body-green;
  }
  &-white {
    @include mq-body-white;
  }
  &-small {
    @include mq-body-small;
  }
  &-micro {
    @include mq-body-micro;
  }
}

.mq-link {
  color: var(--mq-styles-link-color100);
  &:hover {
    outline: 0;
    text-decoration: underline;
    cursor: pointer;
    color: var(--mq-styles-link-hover-color100, var(--mq-styles-link-color100));
  }
  &--link90 {
    color: var(--mq-styles-link-color90);
    &:hover {
      color: var(--mq-styles-link-hover-color90, var(--mq-styles-link-color90));
    }
  }
  &--link110 {
    color: var(--mq-styles-link-color110);
    &:hover {
      color: var(--mq-styles-link-hover-color110, var(--mq-styles-link-color110));
    }
  }
  &--link120 {
    color: var(--mq-styles-link-color120);
    &:hover {
      color: var(--mq-styles-link-hover-color120, var(--mq-styles-link-color120));
    }
  }
  &--grey110 {
    color: var(--mq-color-grey110);
    &:hover {
      color: var(--mq-color-grey110);
    }
  }
  &--grey90 {
    color: var(--mq-color-grey90);
    &:hover {
      color: var(--mq-color-grey90);
    }
  }
  &--grey70 {
    color: var(--mq-color-grey70);
    &:hover {
      color: var(--mq-color-grey70);
    }
  }
  &--grey40 {
    color: var(--mq-color-grey40);
    &:hover {
      color: var(--mq-color-grey40);
    }
  }
  &--white {
    color: var(--mq-color-white);
    &:hover {
      color: var(--mq-color-white);
    }
  }
}

.mq-label {
  font-size: 12px;
  line-height: 16px;
  color: var(--mq-color-grey90);
  &--light {
    color: var(--mq-color-grey70);
  }
  &--blue {
    color: var(--mq-color-blue100);
  }
  &--orange {
    color: var(--mq-color-orange100);
  }
  &--red {
    color: var(--mq-color-red100);
  }
  &--green {
    color: var(--mq-color-green100);
  }
}

.mq-number {
  font-family: HelveticaNeue-Light, Helvetica, Arial;
  color: var(--mq-color-grey100);
  font-weight: 300;
  font-size: 32px;
  line-height: 32px;
  &--n1 {
    font-size: 56px;
    line-height: 56px;
  }
  &--n2 {
    font-size: 48px;
    line-height: 48px;
  }
  &--n3 {
    font-size: 40px;
    line-height: 40px;
  }
  &--n4 {
    font-size: 32px;
    line-height: 32px;
  }
  &--white {
    color: var(--mq-color-white);
  }
}

.mq-list-item {
  display: list-item;
  text-align: -webkit-match-parent;
}

.mq-unordered-list,
.mq-ordered-list {
  display: block;
  -webkit-margin-before: var(--mq-space-small);
          margin-block-start: var(--mq-space-small);
  -webkit-margin-after: var(--mq-space-small);
          margin-block-end: var(--mq-space-small);
  -webkit-margin-start: 0px;
          margin-inline-start: 0px;
  -webkit-margin-end: 0px;
          margin-inline-end: 0px;
  -webkit-padding-start: calc(var(--mq-space-base) * 5);
          padding-inline-start: calc(var(--mq-space-base) * 5);
}

.mq-unordered-list {
  list-style-type: disc;
}

.mq-ordered-list {
  list-style-type: decimal;
}

.mq-feature-heading {
  @include mq-feature-heading;
}

.mq-checkbox {
  &__container {
    display: inline-block;
    height: var(--mq-checkbox-container-width-height);
    width: var(--mq-checkbox-container-width-height);
    line-height: 0;
    margin: auto;
    order: 0;
    vertical-align: middle;
    white-space: nowrap;
    flex-shrink: 0;
    border-radius: 50%;
  }
  &__outline {
    position: relative;
    top: calc(var(--mq-checkbox-width-height) * -1);
    height: var(--mq-checkbox-container-width-height);
    width: var(--mq-checkbox-container-width-height);
    border-radius: 50%;
  }
  &__input {
    position: relative;
    top: 13px;
    left: 11px;
    width: var(--mq-checkbox-width-height);
    height: var(--mq-checkbox-width-height);
    padding: 0;
    margin: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
         appearance: none;
    cursor: pointer;
    &:focus:after {
      border-color: var(--mq-color-blue100);
    }
    &::after {
      content: '';
      display: block;
      width: var(--mq-checkbox-width-height);
      height: var(--mq-checkbox-width-height);
      margin-top: -2px;
      margin-right: 5px;
      border: 1px solid var(--mq-color-grey30);
      background-color: var(--mq-color-white);
      border-radius: 2px;
      transition: 240ms;
    }
    &:hover::after {
      border-color: var(--mq-color-blue100);
    }
    &:checked::before {
      content: '';
      position: absolute;
      top: 0;
      left: 5px;
      display: table;
      width: 6px;
      height: 10px;
      border: 2px solid var(--mq-color-white);
      border-top-width: 0;
      border-left-width: 0;
      transform: rotate(45deg);
    }
    &:checked::after {
      border-color: var(--mq-color-blue100);
      background-color: var(--mq-color-blue100);
    }
  }
  &__input:hover + div {
    background-color: var(--mq-checkbox-hover-background-color);
    cursor: pointer;
  }
}

.mq-link-button {
  padding: calc(var(--mq-space-base) / 2) var(--mq-space-base);
  border-radius: calc(var(--mq-space-base) / 2);
  font-size: 12px;
  height: 24px;
  text-align: center;
  background-color: #ffffff;
  border-color: #bebec0;
  border: 1px solid transparent;
  white-space: nowrap;
  &:hover,
    &:focus,
    &.focus {
    color: #33363e;
    background-color: #f5f5f5;
    border-color: #bebec0;
    text-decoration: none;
    outline: 0;
  }
  &--primary {
    color: var(--mq-btn-primary-text-color);
    background-color: var(--mq-btn-primary-background-color);
    border-color: var(--mq-btn-primary-border-color);
    &:focus,
        &.focus,
        &:hover {
      color: var(--mq-btn-primary-text-color);
      background-color: var(--mq-btn-primary-hover-background-color);
      border-color: var(--mq-btn-primary-hover-border-color);
    }
  }
  &:hover {
    cursor: pointer;
  }
}

.mq-divider {
  border-bottom: 1px solid var(--mq-color-grey90);
  &--grey10 {
    border-bottom-color: var(--mq-color-grey10);
  }
  &--grey20 {
    border-bottom-color: var(--mq-color-grey20);
  }
  &--grey50 {
    border-bottom-color: var(--mq-color-grey50);
  }
  &--grey70 {
    border-bottom-color: var(--mq-color-grey70);
  }
  &--space-base-top {
    margin-top: var(--mq-space-base);
  }
  &--space-base-bottom {
    margin-bottom: var(--mq-space-base);
  }
  &--space-base-vertical {
    margin-top: var(--mq-space-base);
    margin-bottom: var(--mq-space-base);
  }
  &--space-small-top {
    margin-top: var(--mq-space-small);
  }
  &--space-small-bottom {
    margin-bottom: var(--mq-space-small);
  }
  &--space-small-vertical {
    margin-top: var(--mq-space-small);
    margin-bottom: var(--mq-space-small);
  }
  &--space-medium-top {
    margin-top: var(--mq-space-medium);
  }
  &--space-medium-bottom {
    margin-bottom: var(--mq-space-medium);
  }
  &--space-medium-vertical {
    margin-top: var(--mq-space-medium);
    margin-bottom: var(--mq-space-medium);
  }
  &--space-large-top {
    margin-top: var(--mq-space-large);
  }
  &--space-large-bottom {
    margin-bottom: var(--mq-space-large);
  }
  &--space-large-vertical {
    margin-top: var(--mq-space-large);
    margin-bottom: var(--mq-space-large);
  }
}

.mq-badge {
  background-color: var(--mq-color-grey100);
  border-radius: calc(var(--mq-space-base) * 0.5);
  color: var(--mq-color-white);
  padding: 0px var(--mq-space-base);
  height: 20px;
  line-height: 20px;
  font-size: 12px;
  display: inline-block;
  max-width: 200px;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  &--grey100 {
    background-color: var(--mq-color-grey100);
  }
  &--grey30 {
    color: var(--mq-color-grey90);
    background-color: var(--mq-color-grey30);
  }
  &--blue100 {
    background-color: var(--mq-color-blue100);
  }
  &--blue30 {
    color: var(--mq-color-grey90);
    background-color: var(--mq-color-blue30);
  }
  &--gold110 {
    background-color: var(--mq-color-gold110);
  }
  &--gold30 {
    color: var(--mq-color-grey90);
    background-color: var(--mq-color-gold30);
  }
}

.mq-pill {
  display: inline-block;
  height: var(--mq-space-small);
  padding-right: var(--mq-space-base);
  padding-left: var(--mq-space-base);
  background-color: var(--mq-color-grey70);
  border-radius: var(--mq-space-base);
  text-align: center;
  color: var(--mq-color-white);
  font-family: HelveticaNeue, Helvetica, Arial;
  font-size: 10px;
  line-height: calc(var(--mq-space-small) - 1px);
  max-width: var(--mq-pill-maxwidth, 216px);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  &--default {
    height: var(--mq-space-small);
    line-height: calc(var(--mq-space-small) - 1px);
    font-size: 10px;
  }
  &--large {
    height: 20px;
    line-height: 19px;
    font-size: 12px;
    border-radius: var(--mq-space-xsmall);
  }
  &--info {
    background-color: var(--mq-color-blue100);
  }
  &--success {
    background-color: var(--mq-color-green100);
  }
  &--error {
    background-color: var(--mq-color-red100);
  }
  &--warning {
    background-color: var(--mq-color-orange100);
  }
  &--disabled {
    background-color: var(--mq-color-grey70);
  }
  &-light {
    @extend .mq-pill;
    color: var(--mq-color-grey90);
    background-color: var(--mq-color-grey10);
    &--info {
      background-color: var(--mq-color-blue10);
    }
    &--success {
      background-color: var(--mq-color-green10);
    }
    &--error {
      background-color: var(--mq-color-red10);
    }
    &--warning {
      background-color: var(--mq-color-orange10);
    }
    &--disabled {
      background-color: var(--mq-color-grey10);
    }
  }
}

/**
 DO NOT USE THESE
*/

/******************************************

    WARNING - DO NOT USE THESE

*******************************************/

/* Dropdown arrow/caret */

.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top: 4px dashed;
  border-top: 4px solid \9;
  /* IE8 */
  border-right: 4px solid transparent;
  border-left: 4px solid transparent;
}

/* The dropdown wrapper (div) */

.dropup,
.dropdown {
  position: relative;
}

/* Prevent the focus on the dropdown toggle when closing dropdowns */

.dropdown-toggle:focus {
  outline: 0;
}

/* The dropdown menu (ul) */

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  /* none by default, but block on "open" of the menu */
  float: left;
  min-width: calc(var(--mq-space-base) * 20);
  list-style: none;
  text-align: left;
  /* Ensures proper alignment if parent has it changed (e.g., modal footer) */
  border-radius: 4px;
  box-shadow: var(--mq-boxshadow-l2-down);
  background-color: var(--mq-color-white);
  background-clip: padding-box;
  /* Aligns the dropdown menu to right */
  /* */
  /* Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]` */
  &.pull-right,
    &.mq-pull-right {
    right: 0;
    left: auto;
  }
  /* Dividers (basically an hr) within the dropdown */
  .divider {
    height: 1px;
    overflow: hidden;
    background-color: var(--mq-color-grey20);
    padding: 0px;
  }
  /* Links within the dropdown menu */
  > li {
    display: block;
    clear: both;
    font-weight: normal;
    white-space: nowrap;
    /* prevent links from randomly breaking onto new lines */
    height: calc(var(--mq-space-base) * 5);
    line-height: calc(var(--mq-space-base) * 5);
    font-size: 14px;
    &:not(:last-child) {
      border-bottom: 1px solid var(--mq-color-grey10);
    }
    & > a {
      font-size: 14px;
      padding-left: calc(var(--mq-space-small) + 2px);
      /*plus 2 for border on hover and selected state */
      padding-right: var(--mq-space-small);
      width: 100%;
      display: block;
      color: var(--mq-color-grey70);
    }
  }
}

/* Hover/Focus state */

.dropdown-menu > li {
  &:hover:not(.disabled),
    &:focus:not(.disabled) {
    cursor: pointer;
    color: var(--mq-color-grey90);
    background-color: var(--mq-dropdown-option-hover-bg-color);
    > a {
      padding-left: var(--mq-space-small);
      border-left: 2px solid var(--mq-color-grey100);
    }
  }
}

/* Active state */

.dropdown-menu > .active > a,
.dropdown-menu > [selected] > a {
  &,
    &:hover,
    &:focus {
    padding-left: var(--mq-space-small);
    border-left: 2px solid var(--mq-color-blue100);
    color: var(--mq-color-grey90);
    text-decoration: none;
    outline: 0;
  }
}

/* Disabled state */

/* */

/* Gray out text and ensure the hover/focus state remains gray */

.dropdown-menu > .disabled,
.dropdown-menu > .disabled > a {
  &,
    &:hover,
    &:focus {
    color: var(--mq-color-grey40);
  }
  /* Nuke hover/focus effects */
  &:hover,
    &:focus {
    text-decoration: none;
    background-color: transparent;
    background-image: none;
    /* Remove CSS gradient */
    filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
    cursor: not-allowed;
  }
}

/* Open state for the dropdown */

.open {
  /* Show the menu */
  > .dropdown-menu {
    display: block;
  }
  /* Remove the outline when :focus is triggered */
  > a {
    outline: 0;
  }
}

/* Menu positioning */

/* */

/* Add extra class to `.dropdown-menu` to flip the alignment of the dropdown */

/* menu with the parent. */

.dropdown-menu-right {
  left: auto;
  /* Reset the default from `.dropdown-menu` */
  right: 0;
}

/* With v3, we enabled auto-flipping if you have a dropdown within a right */

/* aligned nav component. To enable the undoing of that, we provide an override */

/* to restore the default dropdown menu alignment. */

/* */

/* This is only for left-aligning a dropdown menu within a `.navbar-right` or */

/* `.pull-right` nav component. */

.dropdown-menu-left {
  left: 0;
  right: auto;
}

/* Dropdown section headers */

.dropdown-header {
  display: block;
  padding: 3px 20px;
  font-size: 14px;
  color: var(--mq-color-grey70);
  &:hover {
    cursor: default;
  }
}

/* Backdrop to catch body clicks on mobile, etc. */

.dropdown-backdrop {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: 990;
}

/* Right aligned dropdowns */

.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}

/* Allow for dropdowns to go bottom up (aka, dropup-menu) */

/* */

/* Just add .dropup after the standard .dropdown class and you're set, bro. */

/* TODO: abstract this so that the navbar fixed styles are not placed here? */

.dropup,
.navbar-fixed-bottom .dropdown {
  /* Reverse the caret */
  .caret {
    border-top: 0;
    border-bottom: 4px dashed;
    border-bottom: 4px solid \9;
    /* IE8 */
    content: '';
  }
  /* Different positioning for bottom up menu */
  .dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-bottom: 2px;
  }
}

/* Component alignment */

/* */

/* Reiterate per navbar.less and the modified component alignment there. */

@media (min-width: 1024) {
  .navbar-right {
    .dropdown-menu {
      right: 0;
      left: auto;
    }
    /* Necessary for overrides of the default right aligned menu. */
    /* Will remove come v4 in all likelihood. */
    .dropdown-menu-left {
      left: 0;
      right: auto;
    }
  }
}

.dropup,
.dropdown {
  .dropdown-toggle {
    cursor: pointer;
  }
  .dropdown-toggle[disabled] {
    cursor: not-allowed;
  }
  .dropdown-menu {
    min-width: 100%;
    li:not(:last-child) {
      &.dropdown-header {
        padding: calc(var(--mq-space-small) + 2px);
        &.dropdown-header--label {
          color: var(--mq-color-grey40);
        }
      }
      &.dropdown-link-item {
        padding: var(--mq-space-small);
        font-weight: normal;
        cursor: pointer;
        white-space: nowrap;
        color: var(--mq-color-grey70);
        &:hover {
          color: var(--mq-color-grey90);
          border-left: 2px solid var(--mq-color-grey100);
          background-color: var(--mq-dropdown-option-hover-bg-color);
        }
      }
      > label {
        margin-bottom: 0;
      }
      &.disabled {
        color: var(--mq-color-grey40);
      }
      &.active {
        & > a,
                & > a:hover {
          padding-left: var(--mq-space-small);
          border-left: 2px solid var(--mq-color-blue100);
          color: var(--mq-color-grey90);
        }
      }
      border-bottom: 1px solid var(--mq-color-grey10);
    }
  }
  i.icon-triangledown {
    font-size: 10px;
    vertical-align: middle;
    line-height: 20px;
  }
}

/* helper mixins for buttons */

@mixin box-shadow($shadow) {

  /* iOS <4.3 & Android <4.1 */

  box-shadow: $shadow;
}

@mixin clearfix() {
  &:before,
    &:after {
    content: ' ';
    /* 1 */
    display: table;
    /* 2 */
  }

  &:after {
    clear: both;
  }
}

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;

  border-top-left-radius: $radius;
}

@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;

  border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;

  border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;

  border-top-left-radius: $radius;
}

/* */

/* Button groups */

/* -------------------------------------------------- */

/* Make the div behave like a button */

.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  /* match .btn alignment given font-size hack above */
  > .btn {
    position: relative;
    float: left;
    /* Bring the "active" button to the front */
    &:hover,
        &:focus,
        &:active,
        &.active {
      z-index: 2;
    }
  }
}

/* Prevent double borders when buttons are next to each other */

.btn-group {
  .btn + .btn,
    .btn + .btn-group,
    .btn-group + .btn,
    .btn-group + .btn-group {
    margin-left: -1px;
  }
}

/* Optional: Group multiple button groups together for a toolbar */

.btn-toolbar {
  margin-left: -5px;
  /* Offset the first child's margin */
  @include clearfix;
  .btn,
    .btn-group,
    .input-group {
    float: left;
  }
  > .btn,
    > .btn-group,
    > .input-group {
    margin-left: 5px;
  }
}

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {
  border-radius: 0;
}

/* Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match */

.btn-group > .btn:first-child {
  margin-left: 0;
  &:not(:last-child):not(.dropdown-toggle) {
    @include border-right-radius(0);
  }
}

/* Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it */

.btn-group > .btn:last-child:not(:first-child),
.btn-group > .dropdown-toggle:not(:first-child) {
  @include border-left-radius(0);
}

/* Custom edits for including btn-groups within btn-groups (useful for including dropdown buttons within a btn-group) */

.btn-group > .btn-group {
  float: left;
}

.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {
  border-radius: 0;
}

.btn-group > .btn-group:first-child:not(:last-child) {
  > .btn:last-child,
    > .dropdown-toggle {
    @include border-right-radius(0);
  }
}

.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {
  @include border-left-radius(0);
}

/* On active and open, don't show outline */

.btn-group .dropdown-toggle:active,
.btn-group.open .dropdown-toggle {
  outline: 0;
}

/* Sizing */

/* */

/* Remix the default button sizing classes into new ones for easier manipulation. */

/* .btn-group-xs > .btn { @extend .btn-xs; } */

/* .btn-group-sm > .btn { @extend .btn-sm; } */

/* .btn-group-lg > .btn { @extend .btn-lg; } */

/* Split button dropdowns */

/* ---------------------- */

/* Give the line between buttons some depth */

.btn-group > .btn + .dropdown-toggle {
  padding-left: 8px;
  padding-right: 8px;
}

.btn-group > .btn-lg + .dropdown-toggle {
  padding-left: 12px;
  padding-right: 12px;
}

/* The clickable button for toggling the menu */

/* Remove the gradient and set the same inset shadow as the :active state */

.btn-group.open .dropdown-toggle {
  @include box-shadow(inset 0 3px 5px rgba(0, 0, 0, 0.125));
  /* Show no shadow for `.btn-link` since it has no other button styles. */
  &.btn-link {
    @include box-shadow(none);
  }
}

/* Reposition the caret */

.btn .caret {
  margin-left: 0;
}

/* Carets in other button sizes */

.btn-lg .caret {
  border-width: 5px 5px 0;
  border-bottom-width: 0;
}

/* Upside down carets for .dropup */

.dropup .btn-lg .caret {
  border-width: 0 5px 5px;
}

/* Vertical button groups */

/* ---------------------- */

.btn-group-vertical {
  > .btn,
    > .btn-group,
    > .btn-group > .btn {
    display: block;
    float: none;
    width: 100%;
    max-width: 100%;
  }
  /* Clear floats so dropdown menus can be properly placed */
  > .btn-group {
    @include clearfix;
    > .btn {
      float: none;
    }
  }
  > .btn + .btn,
    > .btn + .btn-group,
    > .btn-group + .btn,
    > .btn-group + .btn-group {
    margin-top: -1px;
    margin-left: 0;
  }
}

.btn-group-vertical > .btn {
  &:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
  &:first-child:not(:last-child) {
    @include border-top-radius(4px);
    @include border-bottom-radius(0);
  }
  &:last-child:not(:first-child) {
    @include border-top-radius(0);
    @include border-bottom-radius(4px);
  }
}

.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {
  border-radius: 0;
}

.btn-group-vertical > .btn-group:first-child:not(:last-child) {
  > .btn:last-child,
    > .dropdown-toggle {
    @include border-bottom-radius(0);
  }
}

.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {
  @include border-top-radius(0);
}

/* Justified button groups */

/* ---------------------- */

.btn-group-justified {
  display: table;
  width: 100%;
  table-layout: fixed;
  border-collapse: separate;
  > .btn,
    > .btn-group {
    float: none;
    display: table-cell;
    width: 1%;
  }
  > .btn-group .btn {
    width: 100%;
  }
  > .btn-group .dropdown-menu {
    left: auto;
  }
}

/* Checkbox and radio options */

/* */

/* In order to support the browser's form validation feedback, powered by the */

/* `required` attribute, we have to "hide" the inputs via `clip`. We cannot use */

/* `display: none;` or `visibility: hidden;` as that also hides the popover. */

/* Simply visually hiding the inputs via `opacity` would leave them clickable in */

/* certain cases which is prevented by using `clip` and `pointer-events`. */

/* This way, we ensure a DOM element is visible to position the popover from. */

/* */

/* See https:/*github.com/twbs/bootstrap/pull/12794 and */

/* https:/*github.com/twbs/bootstrap/pull/14559 for more information. */

[data-toggle='buttons'] {
  > .btn,
    > .btn-group > .btn {
    input[type='radio'],
        input[type='checkbox'] {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
    }
  }
}

body{
  font-family: helvetica;
}

.mq-body {
  font-size: 14px;
  line-height: 1.428571429;
  color: var(--mq-color-grey90);
  font-family: HelveticaNeue, Helvetica, Arial;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
}